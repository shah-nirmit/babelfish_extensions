name: Cache Build Artifacts
on: [push, pull_request]

jobs:
  run-babelfish-jdbc-tests:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Install Dependencies
        id: install-dependencies
        if: always()
        uses: ./.github/composite-actions/install-dependencies

      - name: Restore ccache
        id: cache-compiler
        uses: actions/cache@v3
        with:
          path: ~/.ccache
          key: ccache-Jumbo
          restore-keys: |
            ccache-Jumbo

      - name: Clone and build for Postgres engine using 13.6
        id: build-modified-postgres
        if: steps.cache-compiler.output.cache-hit != true
        uses: ./.github/composite-actions/build-modified-postgres
        with:
          engine_branch: BABEL_1_2_STABLE__PG_13_6
          install_dir: psql13

      - name: Compile ANTLR
        id: compile-antlr
        if: steps.cache-compiler.output.cache-hit != true
        uses: ./.github/composite-actions/compile-antlr
        with:
          install_dir: psql13

      - name: Set env variables and build extensions
        if: steps.cache-compiler.output.cache-hit != true
        uses: ./.github/composite-actions/build-extensions
        with: 
          install_dir: psql13
          extension_branch: BABEL_1_2_STABLE

      - name: Testing
        if: steps.cache-compiler.output.cache-hit != true
        run: |
          ls -al ~
          ls -al ~/psql13
          sudo rm -r ~/psql13
          pwd
        shell: bash
      
      - uses: actions/checkout@v2
        if: steps.cache-compiler.output.cache-hit != true

      - name: Clone and build for Postgres engine using 13.9
        id: build-modified-postgres-2
        if: steps.cache-compiler.output.cache-hit != true
        uses: ./.github/composite-actions/build-modified-postgres
        with:
          engine_branch: BABEL_1_5_STABLE__PG_13_9
          install_dir: psql13

      - name: Copy ANTLR
        id: copy-antlr-1
        if: steps.cache-compiler.output.cache-hit != true
        run: cp "/usr/local/lib/libantlr4-runtime.so.4.9.3" ~/psql13/lib/
        shell: bash

      - name: Set env variables and build extensions
        if: steps.cache-compiler.output.cache-hit != true
        uses: ./.github/composite-actions/build-extensions
        with: 
          install_dir: psql13
          extension_branch: BABEL_1_5_STABLE

      - name: Testing
        if: steps.cache-compiler.output.cache-hit != true
        run: |
          ls -al ~
          ls -al ~/psql13
          sudo rm -r ~/psql13
          pwd
        shell: bash
      
      - uses: actions/checkout@v2
        if: steps.cache-compiler.output.cache-hit != true

      - name: Clone and build for Postgres engine using 14.3
        id: build-modified-postgres-3
        if: steps.cache-compiler.output.cache-hit != true
        uses: ./.github/composite-actions/build-modified-postgres
        with:
          engine_branch: BABEL_2_1_STABLE__PG_14_3
          install_dir: psql14

      - name: Copy ANTLR
        id: copy-antlr-2
        if: steps.cache-compiler.output.cache-hit != true
        run: cp "/usr/local/lib/libantlr4-runtime.so.4.9.3" ~/psql14/lib/
        shell: bash

      - name: Set env variables and build extensions
        if: steps.cache-compiler.output.cache-hit != true
        uses: ./.github/composite-actions/build-extensions
        with: 
          install_dir: psql14
          extension_branch: BABEL_2_1_STABLE

      - name: Testing
        if: steps.cache-compiler.output.cache-hit != true
        run: |
          ls -al ~
          ls -al ~/psql14
          sudo rm -r ~/psql14
          pwd
        shell: bash
      
      - uses: actions/checkout@v2
        if: steps.cache-compiler.output.cache-hit != true

      - name: Clone and build for Postgres engine using 14.5
        id: build-modified-postgres-4
        if: steps.cache-compiler.output.cache-hit != true
        uses: ./.github/composite-actions/build-modified-postgres
        with:
          engine_branch: BABEL_2_2_STABLE__PG_14_5
          install_dir: psql14

      - name: Copy ANTLR
        id: copy-antlr-3
        if: steps.cache-compiler.output.cache-hit != true
        run: cp "/usr/local/lib/libantlr4-runtime.so.4.9.3" ~/psql14/lib/
        shell: bash

      - name: Set env variables and build extensions
        if: steps.cache-compiler.output.cache-hit != true
        uses: ./.github/composite-actions/build-extensions
        with: 
          install_dir: psql14
          extension_branch: BABEL_2_2_STABLE

      - name: Testing
        if: steps.cache-compiler.output.cache-hit != true
        run: |
          ls -al ~
          ls -al ~/psql14
          sudo rm -r ~/psql14
          pwd
        shell: bash
      
      - uses: actions/checkout@v2
        if: steps.cache-compiler.output.cache-hit != true

      - name: Clone and build for Postgres engine using 14.6
        id: build-modified-postgres-5
        if: steps.cache-compiler.output.cache-hit != true
        uses: ./.github/composite-actions/build-modified-postgres
        with:
          engine_branch: BABEL_2_3_STABLE__PG_14_6
          install_dir: psql14

      - name: Copy ANTLR
        id: copy-antlr-4
        if: steps.cache-compiler.output.cache-hit != true
        run: cp "/usr/local/lib/libantlr4-runtime.so.4.9.3" ~/psql14/lib/
        shell: bash

      - name: Set env variables and build extensions
        if: steps.cache-compiler.output.cache-hit != true
        uses: ./.github/composite-actions/build-extensions
        with: 
          install_dir: psql14
          extension_branch: BABEL_2_3_STABLE
      
      - name: Testing
        if: steps.cache-compiler.output.cache-hit != true
        run: |
          ls -al ~
          ls -al ~/psql14
          sudo rm -r ~/psql14
          pwd
        shell: bash
      
      - uses: actions/checkout@v2
        if: steps.cache-compiler.output.cache-hit != true

      - name: Clone and build for Postgres engine using 14.X
        id: build-modified-postgres-6
        if: steps.cache-compiler.output.cache-hit != true
        uses: ./.github/composite-actions/build-modified-postgres
        with:
          engine_branch: BABEL_2_X_DEV__PG_14_X
          install_dir: psql14

      - name: Copy ANTLR
        id: copy-antlr-5
        if: steps.cache-compiler.output.cache-hit != true
        run: cp "/usr/local/lib/libantlr4-runtime.so.4.9.3" ~/psql14/lib/
        shell: bash

      - name: Set env variables and build extensions
        if: steps.cache-compiler.output.cache-hit != true
        uses: ./.github/composite-actions/build-extensions
        with: 
          install_dir: psql14
          extension_branch: BABEL_2_X_DEV
      
      - name: Testing
        if: steps.cache-compiler.output.cache-hit != true
        run: |
          ls -al ~
          ls -al ~/psql14
          sudo rm -r ~/psql14
          pwd
        shell: bash
      
      - uses: actions/checkout@v2
        if: steps.cache-compiler.output.cache-hit != true

      - name: Clone and build for Postgres engine using 15.1
        id: build-modified-postgres-7
        if: steps.cache-compiler.output.cache-hit != true
        uses: ./.github/composite-actions/build-modified-postgres
        with:
          engine_branch: BABEL_3_0_STABLE__PG_15_1
          install_dir: psql15

      - name: Copy ANTLR
        id: copy-antlr-6
        if: steps.cache-compiler.output.cache-hit != true
        run: cp "/usr/local/lib/libantlr4-runtime.so.4.9.3" ~/psql15/lib/
        shell: bash

      - name: Set env variables and build extensions
        if: steps.cache-compiler.output.cache-hit != true
        uses: ./.github/composite-actions/build-extensions
        with: 
          install_dir: psql15
          extension_branch: BABEL_3_0_STABLE

      - name: Testing
        if: steps.cache-compiler.output.cache-hit != true
        run: |
          ls -al ~
          ls -al ~/psql15
          sudo rm -r ~/psql15
          pwd
        shell: bash
      
      - uses: actions/checkout@v2
        if: steps.cache-compiler.output.cache-hit != true

      - name:  Clone and build for Postgres engine using 15.X
        id: build-modified-postgres-8
        if: steps.cache-compiler.output.cache-hit != true
        uses: ./.github/composite-actions/build-modified-postgres
      
      - name: Copy ANTLR
        id: copy-antlr-7
        if: steps.cache-compiler.output.cache-hit != true
        run: cp "/usr/local/lib/libantlr4-runtime.so.4.9.3" ~/psql/lib/
        shell: bash
      
      - name: Build Extensions
        id: build-extensions
        if: steps.cache-compiler.output.cache-hit != true
        uses: ./.github/composite-actions/build-extensions

      - uses: actions/checkout@v2
        if: steps.cache-compiler.output.cache-hit != true

      - name: Testing
        if: steps.cache-compiler.output.cache-hit != true
        run: |
          ls -al ~
          ls -al ~/psql
          ccache -s
        shell: bash